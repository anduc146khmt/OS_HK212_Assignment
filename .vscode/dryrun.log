make --dry-run --always-make --keep-going --print-directory
make: Entering directory '/home/ducan/Downloads/Assigment (1)/BTL/source_code'
gcc -Iinclude  -Wall -c -g src/paging.c -o obj/paging.o
 
gcc -Iinclude  -Wall -c -g src/mem.c -o obj/mem.o
 
gcc -Iinclude  -Wall -c -g src/cpu.c -o obj/cpu.o
 
gcc -Iinclude  -Wall -c -g src/loader.c -o obj/loader.o
 
gcc -Iinclude  -Wall -g obj/paging.o obj/mem.o obj/cpu.o obj/loader.o -o mem -lpthread
 
gcc -Iinclude  -Wall -c -g src/queue.c -o obj/queue.o
 
gcc -Iinclude  -Wall -c -g src/os.c -o obj/os.o
 
gcc -Iinclude  -Wall -c -g src/sched.c -o obj/sched.o
 
gcc -Iinclude  -Wall -c -g src/timer.c -o obj/timer.o
 
gcc -Iinclude  -Wall -g obj/cpu.o obj/loader.o obj/mem.o obj/queue.o obj/os.o obj/sched.o obj/timer.o -o os -lpthread
 
gcc -Iinclude  -Wall -g obj/mem.o obj/cpu.o obj/loader.o obj/queue.o obj/os.o obj/sched.o obj/timer.o -o os -lpthread
 
echo ------ MEMORY MANAGEMENT TEST 0 ------------------------------------
./mem input/proc/m0
echo NOTE: Read file output/m0 to verify your result
echo ------ MEMORY MANAGEMENT TEST 1 ------------------------------------
./mem input/proc/m1
echo 'NOTE: Read file output/m1 to verify your result (your implementation should print nothing)'
 
echo ------ SCHEDULING TEST 0 -------------------------------------------
./os sched_0
echo NOTE: Read file output/sched_0 to verify your result
echo ------ SCHEDULING TEST 1 -------------------------------------------
./os sched_1
echo NOTE: Read file output/sched_1 to verify your result
echo ----- OS TEST 0 ----------------------------------------------------
./os os_0
echo NOTE: Read file output/os_0 to verify your result
echo ----- OS TEST 1 ----------------------------------------------------
./os os_1
echo NOTE: Read file output/os_1 to verify your result
make: Leaving directory '/home/ducan/Downloads/Assigment (1)/BTL/source_code'
 
